### This file was autogenerated by GraphQL Nexus
### Do not make changes to this file directly


"""User's physical address"""
type Address {
  address1: String!
  address2: String
  city: String
  code: String!
  country: String!
  id: UUID!
  owner: User!
  primary: Boolean!
  region: String!
}

input AddressCreateManyWithoutAddressesInput {
  connect: [AddressWhereUniqueInput!]
  create: [AddressCreateWithoutOwnerInput!]
}

input AddressCreateWithoutOwnerInput {
  address1: String!
  address2: String
  city: String
  code: String!
  country: String!
  createdAt: DateTime
  id: UUID
  primary: Boolean
  region: String!
  updatedAt: DateTime
}

input AddressWhereUniqueInput {
  id: UUID
}

enum AppNodeStatus {
  DEFERED
  DRAFT
  PUBLISHED
}

input AsignaturaCreateOneWithoutAsignaturaInput {
  connect: AsignaturaWhereUniqueInput
  create: AsignaturaCreateWithoutDesdoblesInput
}

input AsignaturaCreateWithoutDesdoblesInput {
  code: String!
  createdAt: DateTime
  creditosECTS: Int
  curso: CursoCreateOneWithoutCursoInput!
  description: String
  horasBalance: Int
  horasSemanasPlanificadas: Int
  horasSemanasPresenciales: Int
  horasTotalesPlanificadas: Int
  horasTotalesPresenciales: Int
  id: UUID
  name: String!
  ratio: RatioCreateOneWithoutRatioInput!
  semsestre: Semestre
  shortName: String!
  spacerequirements: String
  titulacion: TitulacionCreateOneWithoutTitulacionInput!
  updatedAt: DateTime
}

input AsignaturaWhereUniqueInput {
  code: String
  id: UUID
  name: String
  shortName: String
}

input AsistenciaCreateManyWithoutAsistenciaInput {
  connect: [AsistenciaWhereUniqueInput!]
  create: [AsistenciaCreateWithoutSesionInput!]
}

input AsistenciaCreateManyWithoutAsistenciasInput {
  connect: [AsistenciaWhereUniqueInput!]
  create: [AsistenciaCreateWithoutEstudianteInput!]
}

input AsistenciaCreateWithoutEstudianteInput {
  atendida: Boolean
  dispensada: Boolean
  id: UUID
  justificada: Boolean
  sesion: SesionCreateOneWithoutSesionInput!
}

input AsistenciaCreateWithoutSesionInput {
  atendida: Boolean
  dispensada: Boolean
  estudiante: UserCreateOneWithoutEstudianteInput!
  id: UUID
  justificada: Boolean
}

input AsistenciaWhereUniqueInput {
  id: UUID
}

"""
Authorization payload token with the key required for the mutation action requested
"""
type AuthPayload {
  token: String!
}

input ContentDocumentCreateManyWithoutContentDocumentsInput {
  connect: [ContentDocumentWhereUniqueInput!]
  create: [ContentDocumentCreateWithoutCreatorInput!]
}

input ContentDocumentCreateWithoutCreatorInput {
  body: String!
  createdAt: DateTime
  id: UUID
  metadata: String!
  subtitle: String!
  title: String!
  updatedAt: DateTime
}

input ContentDocumentWhereUniqueInput {
  id: UUID
}

input ConvocatoriaExamenCreateOneWithoutConvocatoriaInput {
  connect: ConvocatoriaExamenWhereUniqueInput
  create: ConvocatoriaExamenCreateWithoutExamenesInput
}

input ConvocatoriaExamenCreateWithoutExamenesInput {
  createdAt: DateTime
  dateEnd: DateTime!
  dateStart: DateTime!
  id: UUID
  name: String!
  periodo: PeriodoOperativoCreateOneWithoutPeriodoInput!
  updatedAt: DateTime
}

input ConvocatoriaExamenWhereUniqueInput {
  id: UUID
}

input CursoCreateOneWithoutCursoInput {
  connect: CursoWhereUniqueInput
  create: CursoCreateWithoutAsignaturasInput
}

input CursoCreateWithoutAsignaturasInput {
  createdAt: DateTime
  id: UUID
  identifier: String!
  updatedAt: DateTime
}

input CursoWhereUniqueInput {
  id: UUID
  identifier: String
}

scalar DateTime

"""Department is the base unit of HR organizational areas"""
type Department {
  id: UUID!
  members(after: UUID, before: UUID, first: Int!, last: Int!, skip: Int!): [User!]!
  name: String!
}

input DepartmentCreateOneWithoutDepartmentInput {
  connect: DepartmentWhereUniqueInput
  create: DepartmentCreateWithoutMembersInput
}

input DepartmentCreateWithoutMembersInput {
  id: UUID
  name: String!
}

input DepartmentWhereUniqueInput {
  id: UUID
}

input DesdobleCreateManyWithoutDesdoblesInput {
  connect: [DesdobleWhereUniqueInput!]
  create: [DesdobleCreateWithoutLeccionesInput!]
}

input DesdobleCreateWithoutLeccionesInput {
  asignatura: AsignaturaCreateOneWithoutAsignaturaInput!
  createdAt: DateTime
  id: UUID
  matriculas: MatriculaCreateManyWithoutMatriculasInput
  mencion: MencionCreateOneWithoutMencionInput!
  updatedAt: DateTime
}

input DesdobleWhereUniqueInput {
  id: UUID
}

"""User's mobile or digital device"""
type Device {
  countryCode: String
  id: UUID!
  notificationsDevice: String!
  notificationsPermission: Boolean!
  number: String
  owner: User!
  type: DeviceType!
  verified: Boolean!
}

input DeviceCreateManyWithoutDevicesInput {
  connect: [DeviceWhereUniqueInput!]
  create: [DeviceCreateWithoutOwnerInput!]
}

input DeviceCreateWithoutOwnerInput {
  countryCode: String
  createdAt: DateTime
  id: UUID
  notificationsDevice: String!
  notificationsPermission: Boolean
  number: String
  type: DeviceType
  updatedAt: DateTime
  verified: Boolean
}

enum DeviceType {
  OTHER
  PHONE
  TABLET
}

input DeviceWhereUniqueInput {
  id: UUID
  notificationsDevice: String
}

input DiscountCreateManyWithoutDiscountsInput {
  connect: [DiscountWhereUniqueInput!]
  create: [DiscountCreateWithoutProductInput!]
}

input DiscountCreateOneWithoutDiscountInput {
  connect: DiscountWhereUniqueInput
  create: DiscountCreateWithoutItemsInput
}

input DiscountCreateWithoutItemsInput {
  code: String!
  createdAt: DateTime
  description: String!
  discountRequests: DiscountRequestCreateManyWithoutDiscountRequestsInput
  id: UUID
  name: String!
  product: ProductCreateOneWithoutProductInput!
  requirements: String!
  unitPrice: Float!
  updatedAt: DateTime
}

input DiscountCreateWithoutProductInput {
  code: String!
  createdAt: DateTime
  description: String!
  discountRequests: DiscountRequestCreateManyWithoutDiscountRequestsInput
  id: UUID
  items: ItemCreateManyWithoutItemsInput
  name: String!
  requirements: String!
  unitPrice: Float!
  updatedAt: DateTime
}

input DiscountRequestCreatedocumentationInput {
  set: [String!]
}

input DiscountRequestCreateManyWithoutDiscountRequestsInput {
  connect: [DiscountRequestWhereUniqueInput!]
  create: [DiscountRequestCreateWithoutDiscountInput!]
}

input DiscountRequestCreateWithoutDiscountInput {
  applied: Boolean
  approved: Boolean
  createdAt: DateTime
  documentation: DiscountRequestCreatedocumentationInput
  id: UUID
  updatedAt: DateTime
  user: UserCreateOneWithoutUserInput!
}

input DiscountRequestWhereUniqueInput {
  id: UUID
}

input DiscountWhereUniqueInput {
  id: UUID
}

input EstudioCreateOneWithoutEstudioInput {
  connect: EstudioWhereUniqueInput
  create: EstudioCreateWithoutTitulacionesInput
}

input EstudioCreateWithoutTitulacionesInput {
  createdAt: DateTime
  description: String
  id: UUID
  name: String!
  shortName: String!
  updatedAt: DateTime
}

input EstudioWhereUniqueInput {
  id: UUID
  name: String
  shortName: String
}

input EventCreateManyWithoutEventsInput {
  connect: [EventWhereUniqueInput!]
  create: [EventCreateWithoutAuthorInput!]
}

input EventCreateWithoutAuthorInput {
  access: String
  accessPoint: String
  body: String!
  createdAt: DateTime
  date: DateTime!
  id: UUID
  imageURL: String
  organizer: String
  place: SpaceCreateOneWithoutPlaceInput!
  status: AppNodeStatus
  subtitle: String
  target: UserGroup!
  title: String!
  updatedAt: DateTime
}

input EventWhereUniqueInput {
  id: UUID
}

input ExamenCreateManyWithoutExamenesInput {
  connect: [ExamenWhereUniqueInput!]
  create: [ExamenCreateWithoutEspacioInput!]
}

input ExamenCreateWithoutEspacioInput {
  convocatoria: ConvocatoriaExamenCreateOneWithoutConvocatoriaInput!
  createdAt: DateTime
  dateTime: DateTime!
  endTime: String!
  id: UUID
  leccion: LeccionCreateOneWithoutLeccionInput!
  updatedAt: DateTime
}

input ExamenWhereUniqueInput {
  id: UUID
}

input ItemCreateManyWithoutItemsInput {
  connect: [ItemWhereUniqueInput!]
  create: [ItemCreateWithoutOrderInput!]
}

input ItemCreateWithoutOrderInput {
  createdAt: DateTime
  discount: DiscountCreateOneWithoutDiscountInput
  id: UUID
  orderPrice: Float!
  product: ProductCreateOneWithoutProductInput!
  quantity: Int!
  updatedAt: DateTime
}

input ItemWhereUniqueInput {
  id: UUID
}

input LeccionCreateManyWithoutLeccionesDisponiblesInput {
  connect: [LeccionWhereUniqueInput!]
  create: [LeccionCreateWithoutProfesoresDisponiblesInput!]
}

input LeccionCreateManyWithoutLeccionesGestionadasInput {
  connect: [LeccionWhereUniqueInput!]
  create: [LeccionCreateWithoutGestorInput!]
}

input LeccionCreateManyWithoutLeccionesInput {
  connect: [LeccionWhereUniqueInput!]
  create: [LeccionCreateWithoutPeriodoInput!]
}

input LeccionCreateOneWithoutLeccionInput {
  connect: LeccionWhereUniqueInput
  create: LeccionCreateWithoutSesionesInput
}

input LeccionCreateWithoutGestorInput {
  createdAt: DateTime
  desdobles: DesdobleCreateManyWithoutDesdoblesInput
  examenes: ExamenCreateManyWithoutExamenesInput
  id: UUID
  name: String!
  periodo: PeriodoOperativoCreateOneWithoutPeriodoInput!
  profesoresDisponibles: UserCreateManyWithoutProfesoresDisponiblesInput
  recurrencias: RecurrenciaCreateManyWithoutRecurrenciasInput
  sesiones: SesionCreateManyWithoutSesionesInput
  updatedAt: DateTime
}

input LeccionCreateWithoutPeriodoInput {
  createdAt: DateTime
  desdobles: DesdobleCreateManyWithoutDesdoblesInput
  examenes: ExamenCreateManyWithoutExamenesInput
  gestor: UserCreateOneWithoutGestorInput!
  id: UUID
  name: String!
  profesoresDisponibles: UserCreateManyWithoutProfesoresDisponiblesInput
  recurrencias: RecurrenciaCreateManyWithoutRecurrenciasInput
  sesiones: SesionCreateManyWithoutSesionesInput
  updatedAt: DateTime
}

input LeccionCreateWithoutProfesoresDisponiblesInput {
  createdAt: DateTime
  desdobles: DesdobleCreateManyWithoutDesdoblesInput
  examenes: ExamenCreateManyWithoutExamenesInput
  gestor: UserCreateOneWithoutGestorInput!
  id: UUID
  name: String!
  periodo: PeriodoOperativoCreateOneWithoutPeriodoInput!
  recurrencias: RecurrenciaCreateManyWithoutRecurrenciasInput
  sesiones: SesionCreateManyWithoutSesionesInput
  updatedAt: DateTime
}

input LeccionCreateWithoutSesionesInput {
  createdAt: DateTime
  desdobles: DesdobleCreateManyWithoutDesdoblesInput
  examenes: ExamenCreateManyWithoutExamenesInput
  gestor: UserCreateOneWithoutGestorInput!
  id: UUID
  name: String!
  periodo: PeriodoOperativoCreateOneWithoutPeriodoInput!
  profesoresDisponibles: UserCreateManyWithoutProfesoresDisponiblesInput
  recurrencias: RecurrenciaCreateManyWithoutRecurrenciasInput
  updatedAt: DateTime
}

input LeccionWhereUniqueInput {
  id: UUID
}

input MatriculaCreateManyWithoutMatriculasInput {
  connect: [MatriculaWhereUniqueInput!]
  create: [MatriculaCreateWithoutDesdobleInput!]
}

input MatriculaCreateWithoutDesdobleInput {
  alumno: UserCreateOneWithoutAlumnoInput!
  createdAt: DateTime
  id: UUID
  updatedAt: DateTime
}

input MatriculaWhereUniqueInput {
  id: UUID
}

input MediaCategoryCreateOneWithoutCategoryInput {
  connect: MediaCategoryWhereUniqueInput
  create: MediaCategoryCreateWithoutFilesInput
}

input MediaCategoryCreateWithoutFilesInput {
  createdAt: DateTime
  id: UUID
  name: String!
  updatedAt: DateTime
}

input MediaCategoryWhereUniqueInput {
  id: UUID
  name: String
}

input MediaCreateManyWithoutMediasInput {
  connect: [MediaWhereUniqueInput!]
  create: [MediaCreateWithoutUploaderInput!]
}

input MediaCreateWithoutUploaderInput {
  category: MediaCategoryCreateOneWithoutCategoryInput!
  createdAt: DateTime
  id: UUID
  metadata: String!
  name: String!
  updatedAt: DateTime
  url: String!
}

input MediaWhereUniqueInput {
  id: UUID
}

input MencionCreateOneWithoutMencionInput {
  connect: MencionWhereUniqueInput
  create: MencionCreateWithoutDesdoblesInput
}

input MencionCreateWithoutDesdoblesInput {
  createdAt: DateTime
  id: UUID
  name: String!
  shortName: String!
  updatedAt: DateTime
}

input MencionWhereUniqueInput {
  id: UUID
  name: String
  shortName: String
}

type Mutation {
  """Add a new address to the currently logged in user."""
  addAddress(address1: String!, address2: String, city: String!, code: String! = "ES", country: String!, primary: Boolean = false, region: String!): Address!

  """Adds a new social link for the current logged in user"""
  addSocialLink(link: String!, network: String!): SocialLink!

  """
  Changes the password of the account whose reset request matches the provided key.
  """
  changePassword(key: String!, newPassword: String!): AuthPayload!
  createSocialNetwork(data: SocialNetworkCreateInput!): SocialNetwork!
  createSpace(data: SpaceCreateInput!): Space!
  createVenue(data: VenueCreateInput!): Venue!

  """
  Login a registered user.
                    Returns the token required for authentication.
  """
  login(email: String!, password: String!): AuthPayload!

  """
  Creates a reset password request, locks the account requested, and sends an
  email to the requestee with a link to create a new password.
                    Returns the key to restore the password.
  """
  requestResetPassword(email: String!): AuthPayload!
  shield(msg: String!): AuthPayload!

  """
  Signs up a new user.
                    Returns the token required to verify its email account.
  """
  signUpUser(email: String!, firstname: String!, groupRequest: UserGroup, lastname: String!, password: String!): AuthPayload!

  """Updates an existing address of the currently logged in user."""
  updateAddress(address1: String, address2: String, city: String, code: String, country: String, id: String!, primary: Boolean = false, region: String): Address!
}

input NewsCreateManyWithoutNewsesInput {
  connect: [NewsWhereUniqueInput!]
  create: [NewsCreateWithoutAuthorInput!]
}

input NewsCreateWithoutAuthorInput {
  body: String!
  category: NewsFeedCategories
  createdAt: DateTime
  expiration: DateTime!
  featured: Boolean
  id: UUID
  imageURL: String
  status: AppNodeStatus
  subtitle: String
  target: UserGroup!
  title: String!
  updatedAt: DateTime
}

enum NewsFeedCategories {
  ALERT
  CALL
  NEWS
}

input NewsWhereUniqueInput {
  id: UUID
}

"""Government issued identification document"""
type OfficialDocument {
  expiration: DateTime!
  id: UUID!
  number: String!
  other: String
  owner: User!
  type: OfficialDocumentType!
}

input OfficialDocumentCreateManyWithoutOfficialDocumentsInput {
  connect: [OfficialDocumentWhereUniqueInput!]
  create: [OfficialDocumentCreateWithoutOwnerInput!]
}

input OfficialDocumentCreateWithoutOwnerInput {
  createdAt: DateTime
  expiration: DateTime!
  id: UUID
  number: String!
  other: String
  type: OfficialDocumentType
  updatedAt: DateTime
}

enum OfficialDocumentType {
  DRIVINGLICENSE
  NATIONALID
  OTHER
  PASSPORT
  SOCIALSECURITY
}

input OfficialDocumentWhereUniqueInput {
  id: UUID
  number: String
}

input OrderCreateManyWithoutOrdersInput {
  connect: [OrderWhereUniqueInput!]
  create: [OrderCreateWithoutCustomerInput!]
}

input OrderCreateWithoutCustomerInput {
  createdAt: DateTime
  id: UUID
  items: ItemCreateManyWithoutItemsInput
  metadata: String!
  paymentDue: DateTime!
  paymentSettled: Boolean
  reference: String!
  total: Float!
  transactions: TransactionCreateManyWithoutTransactionsInput
  updatedAt: DateTime
  vatRate: Int
}

input OrderWhereUniqueInput {
  id: UUID
  reference: String
}

input PeriodoOperativoCreateOneWithoutPeriodoInput {
  connect: PeriodoOperativoWhereUniqueInput
  create: PeriodoOperativoCreateWithoutConvocatoriasExamenesInput
}

input PeriodoOperativoCreateWithoutConvocatoriasExamenesInput {
  createdAt: DateTime
  id: UUID
  lecciones: LeccionCreateManyWithoutLeccionesInput
  updatedAt: DateTime
  yearEnd: Int!
  yearStart: Int!
}

input PeriodoOperativoWhereUniqueInput {
  id: UUID
}

input ProductCategoryCreateOneWithoutCategoryInput {
  connect: ProductCategoryWhereUniqueInput
  create: ProductCategoryCreateWithoutProductsInput
}

input ProductCategoryCreateWithoutProductsInput {
  createdAt: DateTime
  id: UUID
  name: String!
  updatedAt: DateTime
}

input ProductCategoryWhereUniqueInput {
  id: UUID
  name: String
}

input ProductCreateimageURLsInput {
  set: [String!]
}

input ProductCreateOneWithoutProductInput {
  connect: ProductWhereUniqueInput
  create: ProductCreateWithoutOrdersInput
}

input ProductCreateWithoutOrdersInput {
  category: ProductCategoryCreateOneWithoutCategoryInput!
  content: String!
  createdAt: DateTime
  description: String!
  discounts: DiscountCreateManyWithoutDiscountsInput
  id: UUID
  imageURLs: ProductCreateimageURLsInput
  name: String!
  unitPrice: Float!
  updatedAt: DateTime
}

input ProductWhereUniqueInput {
  id: UUID
}

type Query {
  address(where: AddressWhereUniqueInput!): Address
  addresses(after: UUID, before: UUID, first: Int!, last: Int!, skip: Int!): [Address!]!
  department(where: DepartmentWhereUniqueInput!): Department
  departments(after: UUID, before: UUID, first: Int!, last: Int!, skip: Int!): [Department!]!
  device(where: DeviceWhereUniqueInput!): Device
  devices(after: UUID, before: UUID, first: Int!, last: Int!, skip: Int!): [Device!]!

  """Query data of the currently authenticated user"""
  me: User!
  officialDocument(where: OfficialDocumentWhereUniqueInput!): OfficialDocument
  officialDocuments(after: UUID, before: UUID, first: Int!, last: Int!, skip: Int!): [OfficialDocument!]!
  role(where: RoleWhereUniqueInput!): Role
  roles(after: UUID, before: UUID, first: Int!, last: Int!, skip: Int!): [Role!]!
  socialLink(where: SocialLinkWhereUniqueInput!): SocialLink
  socialLinks(after: UUID, before: UUID, first: Int!, last: Int!, skip: Int!): [SocialLink!]!
  socialNetwork(where: SocialNetworkWhereUniqueInput!): SocialNetwork
  socialNetworks(after: UUID, before: UUID, first: Int!, last: Int!, skip: Int!): [SocialNetwork!]!
  space(where: SpaceWhereUniqueInput!): Space
  spaces(after: UUID, before: UUID, first: Int!, last: Int!, skip: Int!): [Space!]!
  venue(where: VenueWhereUniqueInput!): Venue
  venues(after: UUID, before: UUID, first: Int!, last: Int!, skip: Int!): [Venue!]!
}

input RatioCreateOneWithoutRatioInput {
  connect: RatioWhereUniqueInput
  create: RatioCreateWithoutAsignaturasInput
}

input RatioCreateWithoutAsignaturasInput {
  id: UUID
  multiplier: Int
  name: String!
}

input RatioWhereUniqueInput {
  id: UUID
  name: String
}

input RecurrenciaCreateManyWithoutLeccionesPlanificadasInput {
  connect: [RecurrenciaWhereUniqueInput!]
  create: [RecurrenciaCreateWithoutPlannedSpacesInput!]
}

input RecurrenciaCreateManyWithoutRecurrenciasInput {
  connect: [RecurrenciaWhereUniqueInput!]
  create: [RecurrenciaCreateWithoutLeccionInput!]
}

input RecurrenciaCreateWithoutLeccionInput {
  createdAt: DateTime
  id: UUID
  plannedSpaces: SpaceCreateManyWithoutPlannedSpacesInput
  timeEnd: String!
  timeStart: String!
  updatedAt: DateTime
  weekday: WeekDay
}

input RecurrenciaCreateWithoutPlannedSpacesInput {
  createdAt: DateTime
  id: UUID
  leccion: LeccionCreateOneWithoutLeccionInput!
  timeEnd: String!
  timeStart: String!
  updatedAt: DateTime
  weekday: WeekDay
}

input RecurrenciaWhereUniqueInput {
  id: UUID
}

"""User permission role"""
type Role {
  id: UUID!
  name: String!
  users(after: UUID, before: UUID, first: Int!, last: Int!, skip: Int!): [User!]!
}

input RoleCreateManyWithoutRolesInput {
  connect: [RoleWhereUniqueInput!]
  create: [RoleCreateWithoutUsersInput!]
}

input RoleCreateWithoutUsersInput {
  createdAt: DateTime
  id: UUID
  name: String!
  updatedAt: DateTime
}

input RoleWhereUniqueInput {
  id: UUID
}

enum Semestre {
  ANUAL
  SEMESTRE_1
  SEMESTRE_2
}

input SesionCreateManyWithoutSesionesInput {
  connect: [SesionWhereUniqueInput!]
  create: [SesionCreateWithoutAtInput!]
}

input SesionCreateOneWithoutSesionInput {
  connect: SesionWhereUniqueInput
  create: SesionCreateWithoutAsistenciaInput
}

input SesionCreateWithoutAsistenciaInput {
  at: SpaceCreateOneWithoutAtInput!
  by: UserCreateOneWithoutByInput!
  closedAt: DateTime!
  createdAt: DateTime
  id: UUID
  leccion: LeccionCreateOneWithoutLeccionInput!
  updatedAt: DateTime
}

input SesionCreateWithoutAtInput {
  asistencia: AsistenciaCreateManyWithoutAsistenciaInput
  by: UserCreateOneWithoutByInput!
  closedAt: DateTime!
  createdAt: DateTime
  id: UUID
  leccion: LeccionCreateOneWithoutLeccionInput!
  updatedAt: DateTime
}

input SesionWhereUniqueInput {
  id: UUID
}

"""User's social network link"""
type SocialLink {
  id: UUID!
  link: String!
  socialNetwork: SocialNetwork!
}

input SocialLinkCreateManyWithoutSocialNetworkLinksInput {
  connect: [SocialLinkWhereUniqueInput!]
  create: [SocialLinkCreateWithoutOwnerInput!]
}

input SocialLinkCreateManyWithoutUserLinksInput {
  connect: [SocialLinkWhereUniqueInput!]
  create: [SocialLinkCreateWithoutSocialNetworkInput!]
}

input SocialLinkCreateWithoutOwnerInput {
  id: UUID
  link: String!
  socialNetwork: SocialNetworkCreateOneWithoutSocialNetworkInput!
}

input SocialLinkCreateWithoutSocialNetworkInput {
  id: UUID
  link: String!
  owner: UserCreateOneWithoutOwnerInput!
}

input SocialLinkWhereUniqueInput {
  id: UUID
  link: String
}

"""Social networks available for user profiles"""
type SocialNetwork {
  baseURL: String!
  id: UUID!
  name: String!
  ownURL: String!
  userLinks(after: UUID, before: UUID, first: Int!, last: Int!, skip: Int!): [SocialLink!]!
}

input SocialNetworkCreateInput {
  baseURL: String!
  id: UUID
  name: String!
  ownURL: String!
  userLinks: SocialLinkCreateManyWithoutUserLinksInput
}

input SocialNetworkCreateOneWithoutSocialNetworkInput {
  connect: SocialNetworkWhereUniqueInput
  create: SocialNetworkCreateWithoutUserLinksInput
}

input SocialNetworkCreateWithoutUserLinksInput {
  baseURL: String!
  id: UUID
  name: String!
  ownURL: String!
}

input SocialNetworkWhereUniqueInput {
  id: UUID
}

"""Space/room/area in a venue"""
type Space {
  id: UUID!
  name: String!
  venue: Venue!
}

input SpaceCreateInput {
  createdAt: DateTime
  events: EventCreateManyWithoutEventsInput
  examenes: ExamenCreateManyWithoutExamenesInput
  id: UUID
  leccionesPlanificadas: RecurrenciaCreateManyWithoutLeccionesPlanificadasInput
  name: String!
  sesiones: SesionCreateManyWithoutSesionesInput
  updatedAt: DateTime
  venue: VenueCreateOneWithoutVenueInput!
}

input SpaceCreateManyWithoutPlannedSpacesInput {
  connect: [SpaceWhereUniqueInput!]
  create: [SpaceCreateWithoutLeccionesPlanificadasInput!]
}

input SpaceCreateManyWithoutSpacesInput {
  connect: [SpaceWhereUniqueInput!]
  create: [SpaceCreateWithoutVenueInput!]
}

input SpaceCreateOneWithoutAtInput {
  connect: SpaceWhereUniqueInput
  create: SpaceCreateWithoutSesionesInput
}

input SpaceCreateOneWithoutPlaceInput {
  connect: SpaceWhereUniqueInput
  create: SpaceCreateWithoutEventsInput
}

input SpaceCreateWithoutEventsInput {
  createdAt: DateTime
  examenes: ExamenCreateManyWithoutExamenesInput
  id: UUID
  leccionesPlanificadas: RecurrenciaCreateManyWithoutLeccionesPlanificadasInput
  name: String!
  sesiones: SesionCreateManyWithoutSesionesInput
  updatedAt: DateTime
  venue: VenueCreateOneWithoutVenueInput!
}

input SpaceCreateWithoutLeccionesPlanificadasInput {
  createdAt: DateTime
  events: EventCreateManyWithoutEventsInput
  examenes: ExamenCreateManyWithoutExamenesInput
  id: UUID
  name: String!
  sesiones: SesionCreateManyWithoutSesionesInput
  updatedAt: DateTime
  venue: VenueCreateOneWithoutVenueInput!
}

input SpaceCreateWithoutSesionesInput {
  createdAt: DateTime
  events: EventCreateManyWithoutEventsInput
  examenes: ExamenCreateManyWithoutExamenesInput
  id: UUID
  leccionesPlanificadas: RecurrenciaCreateManyWithoutLeccionesPlanificadasInput
  name: String!
  updatedAt: DateTime
  venue: VenueCreateOneWithoutVenueInput!
}

input SpaceCreateWithoutVenueInput {
  createdAt: DateTime
  events: EventCreateManyWithoutEventsInput
  examenes: ExamenCreateManyWithoutExamenesInput
  id: UUID
  leccionesPlanificadas: RecurrenciaCreateManyWithoutLeccionesPlanificadasInput
  name: String!
  sesiones: SesionCreateManyWithoutSesionesInput
  updatedAt: DateTime
}

input SpaceWhereUniqueInput {
  id: UUID
}

input TitulacionCreateOneWithoutTitulacionInput {
  connect: TitulacionWhereUniqueInput
  create: TitulacionCreateWithoutAsignaturasInput
}

input TitulacionCreateWithoutAsignaturasInput {
  code: String!
  createdAt: DateTime
  description: String
  estudio: EstudioCreateOneWithoutEstudioInput!
  id: UUID
  name: String!
  shortName: String!
  updatedAt: DateTime
}

input TitulacionWhereUniqueInput {
  code: String
  id: UUID
  name: String
  shortName: String
}

input TransactionCreateManyWithoutTransactionsInput {
  connect: [TransactionWhereUniqueInput!]
  create: [TransactionCreateWithoutOrderInput!]
}

input TransactionCreateWithoutOrderInput {
  amount: Int!
  createdAt: DateTime
  id: UUID
  reference: String!
  type: TxType
  updatedAt: DateTime
}

input TransactionWhereUniqueInput {
  id: UUID
}

enum TxType {
  PAYMENT
  PURCHASE
  RECEIPT
  SALE
}

"""Registered user"""
type User {
  addresses(after: UUID, before: UUID, first: Int!, last: Int!, skip: Int!): [Address!]!
  department: Department
  devices(after: UUID, before: UUID, first: Int!, last: Int!, skip: Int!): [Device!]!
  email: String!
  emailVerified: Boolean!
  firstname: String!
  group: UserGroup!
  groupRequest: UserGroup
  id: UUID!
  isAdmin: Boolean!
  lastname: String!
  officialDocuments(after: UUID, before: UUID, first: Int!, last: Int!, skip: Int!): [OfficialDocument!]!
  password: String!
  roles(after: UUID, before: UUID, first: Int!, last: Int!, skip: Int!): [Role!]!
  socialNetworkLinks(after: UUID, before: UUID, first: Int!, last: Int!, skip: Int!): [SocialLink!]!
}

input UserCreateManyWithoutProfesoresDisponiblesInput {
  connect: [UserWhereUniqueInput!]
  create: [UserCreateWithoutLeccionesDisponiblesInput!]
}

input UserCreateOneWithoutAlumnoInput {
  connect: UserWhereUniqueInput
  create: UserCreateWithoutMatriculasInput
}

input UserCreateOneWithoutByInput {
  connect: UserWhereUniqueInput
  create: UserCreateWithoutSesionesInput
}

input UserCreateOneWithoutEstudianteInput {
  connect: UserWhereUniqueInput
  create: UserCreateWithoutAsistenciasInput
}

input UserCreateOneWithoutGestorInput {
  connect: UserWhereUniqueInput
  create: UserCreateWithoutLeccionesGestionadasInput
}

input UserCreateOneWithoutOwnerInput {
  connect: UserWhereUniqueInput
  create: UserCreateWithoutSocialNetworkLinksInput
}

input UserCreateOneWithoutUserInput {
  connect: UserWhereUniqueInput
  create: UserCreateWithoutDiscountRequestsInput
}

input UserCreateWithoutAsistenciasInput {
  addresses: AddressCreateManyWithoutAddressesInput
  avatar: String
  contentDocuments: ContentDocumentCreateManyWithoutContentDocumentsInput
  createdAt: DateTime
  department: DepartmentCreateOneWithoutDepartmentInput
  devices: DeviceCreateManyWithoutDevicesInput
  discountRequests: DiscountRequestCreateManyWithoutDiscountRequestsInput
  email: String!
  emailVerified: Boolean
  events: EventCreateManyWithoutEventsInput
  firstname: String!
  group: UserGroup
  groupRequest: UserGroup
  id: UUID
  isAdmin: Boolean
  lastname: String!
  leccionesDisponibles: LeccionCreateManyWithoutLeccionesDisponiblesInput
  leccionesGestionadas: LeccionCreateManyWithoutLeccionesGestionadasInput
  matriculas: MatriculaCreateManyWithoutMatriculasInput
  medias: MediaCreateManyWithoutMediasInput
  metadata: String
  newses: NewsCreateManyWithoutNewsesInput
  officialDocuments: OfficialDocumentCreateManyWithoutOfficialDocumentsInput
  orders: OrderCreateManyWithoutOrdersInput
  password: String!
  roles: RoleCreateManyWithoutRolesInput
  sesiones: SesionCreateManyWithoutSesionesInput
  socialNetworkLinks: SocialLinkCreateManyWithoutSocialNetworkLinksInput
  updatedAt: DateTime
}

input UserCreateWithoutDiscountRequestsInput {
  addresses: AddressCreateManyWithoutAddressesInput
  asistencias: AsistenciaCreateManyWithoutAsistenciasInput
  avatar: String
  contentDocuments: ContentDocumentCreateManyWithoutContentDocumentsInput
  createdAt: DateTime
  department: DepartmentCreateOneWithoutDepartmentInput
  devices: DeviceCreateManyWithoutDevicesInput
  email: String!
  emailVerified: Boolean
  events: EventCreateManyWithoutEventsInput
  firstname: String!
  group: UserGroup
  groupRequest: UserGroup
  id: UUID
  isAdmin: Boolean
  lastname: String!
  leccionesDisponibles: LeccionCreateManyWithoutLeccionesDisponiblesInput
  leccionesGestionadas: LeccionCreateManyWithoutLeccionesGestionadasInput
  matriculas: MatriculaCreateManyWithoutMatriculasInput
  medias: MediaCreateManyWithoutMediasInput
  metadata: String
  newses: NewsCreateManyWithoutNewsesInput
  officialDocuments: OfficialDocumentCreateManyWithoutOfficialDocumentsInput
  orders: OrderCreateManyWithoutOrdersInput
  password: String!
  roles: RoleCreateManyWithoutRolesInput
  sesiones: SesionCreateManyWithoutSesionesInput
  socialNetworkLinks: SocialLinkCreateManyWithoutSocialNetworkLinksInput
  updatedAt: DateTime
}

input UserCreateWithoutLeccionesDisponiblesInput {
  addresses: AddressCreateManyWithoutAddressesInput
  asistencias: AsistenciaCreateManyWithoutAsistenciasInput
  avatar: String
  contentDocuments: ContentDocumentCreateManyWithoutContentDocumentsInput
  createdAt: DateTime
  department: DepartmentCreateOneWithoutDepartmentInput
  devices: DeviceCreateManyWithoutDevicesInput
  discountRequests: DiscountRequestCreateManyWithoutDiscountRequestsInput
  email: String!
  emailVerified: Boolean
  events: EventCreateManyWithoutEventsInput
  firstname: String!
  group: UserGroup
  groupRequest: UserGroup
  id: UUID
  isAdmin: Boolean
  lastname: String!
  leccionesGestionadas: LeccionCreateManyWithoutLeccionesGestionadasInput
  matriculas: MatriculaCreateManyWithoutMatriculasInput
  medias: MediaCreateManyWithoutMediasInput
  metadata: String
  newses: NewsCreateManyWithoutNewsesInput
  officialDocuments: OfficialDocumentCreateManyWithoutOfficialDocumentsInput
  orders: OrderCreateManyWithoutOrdersInput
  password: String!
  roles: RoleCreateManyWithoutRolesInput
  sesiones: SesionCreateManyWithoutSesionesInput
  socialNetworkLinks: SocialLinkCreateManyWithoutSocialNetworkLinksInput
  updatedAt: DateTime
}

input UserCreateWithoutLeccionesGestionadasInput {
  addresses: AddressCreateManyWithoutAddressesInput
  asistencias: AsistenciaCreateManyWithoutAsistenciasInput
  avatar: String
  contentDocuments: ContentDocumentCreateManyWithoutContentDocumentsInput
  createdAt: DateTime
  department: DepartmentCreateOneWithoutDepartmentInput
  devices: DeviceCreateManyWithoutDevicesInput
  discountRequests: DiscountRequestCreateManyWithoutDiscountRequestsInput
  email: String!
  emailVerified: Boolean
  events: EventCreateManyWithoutEventsInput
  firstname: String!
  group: UserGroup
  groupRequest: UserGroup
  id: UUID
  isAdmin: Boolean
  lastname: String!
  leccionesDisponibles: LeccionCreateManyWithoutLeccionesDisponiblesInput
  matriculas: MatriculaCreateManyWithoutMatriculasInput
  medias: MediaCreateManyWithoutMediasInput
  metadata: String
  newses: NewsCreateManyWithoutNewsesInput
  officialDocuments: OfficialDocumentCreateManyWithoutOfficialDocumentsInput
  orders: OrderCreateManyWithoutOrdersInput
  password: String!
  roles: RoleCreateManyWithoutRolesInput
  sesiones: SesionCreateManyWithoutSesionesInput
  socialNetworkLinks: SocialLinkCreateManyWithoutSocialNetworkLinksInput
  updatedAt: DateTime
}

input UserCreateWithoutMatriculasInput {
  addresses: AddressCreateManyWithoutAddressesInput
  asistencias: AsistenciaCreateManyWithoutAsistenciasInput
  avatar: String
  contentDocuments: ContentDocumentCreateManyWithoutContentDocumentsInput
  createdAt: DateTime
  department: DepartmentCreateOneWithoutDepartmentInput
  devices: DeviceCreateManyWithoutDevicesInput
  discountRequests: DiscountRequestCreateManyWithoutDiscountRequestsInput
  email: String!
  emailVerified: Boolean
  events: EventCreateManyWithoutEventsInput
  firstname: String!
  group: UserGroup
  groupRequest: UserGroup
  id: UUID
  isAdmin: Boolean
  lastname: String!
  leccionesDisponibles: LeccionCreateManyWithoutLeccionesDisponiblesInput
  leccionesGestionadas: LeccionCreateManyWithoutLeccionesGestionadasInput
  medias: MediaCreateManyWithoutMediasInput
  metadata: String
  newses: NewsCreateManyWithoutNewsesInput
  officialDocuments: OfficialDocumentCreateManyWithoutOfficialDocumentsInput
  orders: OrderCreateManyWithoutOrdersInput
  password: String!
  roles: RoleCreateManyWithoutRolesInput
  sesiones: SesionCreateManyWithoutSesionesInput
  socialNetworkLinks: SocialLinkCreateManyWithoutSocialNetworkLinksInput
  updatedAt: DateTime
}

input UserCreateWithoutSesionesInput {
  addresses: AddressCreateManyWithoutAddressesInput
  asistencias: AsistenciaCreateManyWithoutAsistenciasInput
  avatar: String
  contentDocuments: ContentDocumentCreateManyWithoutContentDocumentsInput
  createdAt: DateTime
  department: DepartmentCreateOneWithoutDepartmentInput
  devices: DeviceCreateManyWithoutDevicesInput
  discountRequests: DiscountRequestCreateManyWithoutDiscountRequestsInput
  email: String!
  emailVerified: Boolean
  events: EventCreateManyWithoutEventsInput
  firstname: String!
  group: UserGroup
  groupRequest: UserGroup
  id: UUID
  isAdmin: Boolean
  lastname: String!
  leccionesDisponibles: LeccionCreateManyWithoutLeccionesDisponiblesInput
  leccionesGestionadas: LeccionCreateManyWithoutLeccionesGestionadasInput
  matriculas: MatriculaCreateManyWithoutMatriculasInput
  medias: MediaCreateManyWithoutMediasInput
  metadata: String
  newses: NewsCreateManyWithoutNewsesInput
  officialDocuments: OfficialDocumentCreateManyWithoutOfficialDocumentsInput
  orders: OrderCreateManyWithoutOrdersInput
  password: String!
  roles: RoleCreateManyWithoutRolesInput
  socialNetworkLinks: SocialLinkCreateManyWithoutSocialNetworkLinksInput
  updatedAt: DateTime
}

input UserCreateWithoutSocialNetworkLinksInput {
  addresses: AddressCreateManyWithoutAddressesInput
  asistencias: AsistenciaCreateManyWithoutAsistenciasInput
  avatar: String
  contentDocuments: ContentDocumentCreateManyWithoutContentDocumentsInput
  createdAt: DateTime
  department: DepartmentCreateOneWithoutDepartmentInput
  devices: DeviceCreateManyWithoutDevicesInput
  discountRequests: DiscountRequestCreateManyWithoutDiscountRequestsInput
  email: String!
  emailVerified: Boolean
  events: EventCreateManyWithoutEventsInput
  firstname: String!
  group: UserGroup
  groupRequest: UserGroup
  id: UUID
  isAdmin: Boolean
  lastname: String!
  leccionesDisponibles: LeccionCreateManyWithoutLeccionesDisponiblesInput
  leccionesGestionadas: LeccionCreateManyWithoutLeccionesGestionadasInput
  matriculas: MatriculaCreateManyWithoutMatriculasInput
  medias: MediaCreateManyWithoutMediasInput
  metadata: String
  newses: NewsCreateManyWithoutNewsesInput
  officialDocuments: OfficialDocumentCreateManyWithoutOfficialDocumentsInput
  orders: OrderCreateManyWithoutOrdersInput
  password: String!
  roles: RoleCreateManyWithoutRolesInput
  sesiones: SesionCreateManyWithoutSesionesInput
  updatedAt: DateTime
}

enum UserGroup {
  ESTUDIANTE
  GENERAL
  STAFF
}

input UserWhereUniqueInput {
  email: String
  id: UUID
}

scalar UUID

"""Places"""
type Venue {
  address: String!
  id: UUID!
  latitude: Float!
  longitude: Float!
  name: String!
  placeID: String!
  spaces(after: UUID, before: UUID, first: Int!, last: Int!, skip: Int!): [Space!]!
}

input VenueCreateInput {
  address: String!
  createdAt: DateTime
  id: UUID
  latitude: Float!
  longitude: Float!
  name: String!
  placeID: String!
  spaces: SpaceCreateManyWithoutSpacesInput
  updatedAt: DateTime
}

input VenueCreateOneWithoutVenueInput {
  connect: VenueWhereUniqueInput
  create: VenueCreateWithoutSpacesInput
}

input VenueCreateWithoutSpacesInput {
  address: String!
  createdAt: DateTime
  id: UUID
  latitude: Float!
  longitude: Float!
  name: String!
  placeID: String!
  updatedAt: DateTime
}

input VenueWhereUniqueInput {
  id: UUID
}

enum WeekDay {
  DOMINGO
  JUEVES
  LUNES
  MARTES
  MIERCOLES
  SABADO
  VIERNES
}
